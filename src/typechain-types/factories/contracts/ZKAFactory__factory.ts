/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  ZKAFactory,
  ZKAFactoryInterface,
} from "../../contracts/ZKAFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC1167FailedCreateClone",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOfficialVerifier",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_zkVerifier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_zkpVerifierName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    name: "newZKAVerifierInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_proofKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "_saveTimestamp",
        type: "uint64",
      },
    ],
    name: "proofToStorageInfo",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_zkpVerifierName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "computeZKAVerifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_zkpVerifierName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zkpVerifierAddress",
        type: "address",
      },
    ],
    name: "deployZKAVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchAllZKAVerifiers",
    outputs: [
      {
        internalType: "address[]",
        name: "allVerifiers",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "zkpVerifierName",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "address",
            name: "deployer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deployTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct IZKAFactory.VerifierMeta[]",
        name: "allMetas",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implZKAVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "metaZKAVerifiers",
    outputs: [
      {
        internalType: "string",
        name: "zkpVerifierName",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "deployTimestamp",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proofKey",
        type: "bytes32",
      },
    ],
    name: "proofInStorage",
    outputs: [
      {
        internalType: "uint64",
        name: "verifyTimestamp",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proofKey",
        type: "bytes32",
      },
    ],
    name: "proofToStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setimplZKAVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "verifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052338061002a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61003381610039565b50610089565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113ff806100986000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c80638da5cb5b11610081578063cc0391eb1161005b578063cc0391eb146101ff578063e8e6219714610212578063f2fde38b1461022557600080fd5b80638da5cb5b146101b85780638e6303ed146101d6578063a6b9b43b146101ec57600080fd5b806363b318d0116100b257806363b318d01461016d578063710baa671461018d578063715018a6146101b057600080fd5b8062e58443146100d85780633440dee91461012057806357a9744c14610158575b600080fd5b6101026100e6366004610d67565b60026020526000908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b61013361012e366004610d67565b610238565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610117565b61016b610166366004610d67565b61026f565b005b6001546101339073ffffffffffffffffffffffffffffffffffffffff1681565b6101a061019b366004610da9565b61035c565b6040516101179493929190610e28565b61016b6104c9565b60005473ffffffffffffffffffffffffffffffffffffffff16610133565b6101de6104dd565b604051610117929190610e85565b61016b6101fa366004610da9565b610827565b61016b61020d366004611085565b610876565b61013361022036600461110a565b610ae6565b61016b610233366004610da9565b610b42565b6004818154811061024857600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b3360008181526003602052604081206002015474010000000000000000000000000000000000000000900467ffffffffffffffff1690036102dc576040517ff610a1b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000164267ffffffffffffffff811691821790925592519283529184917f506984e9bc2f939fd98c70c2890851b323177d5d18cf63f4b4465be41966e964910160405180910390a2505050565b6003602052600090815260409020805481906103779061116e565b80601f01602080910402602001604051908101604052809291908181526020018280546103a39061116e565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b5050505050908060010180546104059061116e565b80601f01602080910402602001604051908101604052809291908181526020018280546104319061116e565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b5050506002909301549192505073ffffffffffffffffffffffffffffffffffffffff81169067ffffffffffffffff740100000000000000000000000000000000000000009091041684565b6104d1610bab565b6104db6000610bfe565b565b600454606090819060008167ffffffffffffffff81111561050057610500610fab565b604051908082528060200260200182016040528015610529578160200160208202803683370190505b50905060008267ffffffffffffffff81111561054757610547610fab565b60405190808252806020026020018201604052801561059c57816020015b6040805160808101825260608082526020820181905260009282018390528101919091528152602001906001900390816105655790505b50905060005b8381101561081c57600481815481106105bd576105bd6111c1565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168382815181106105fa576105fa6111c1565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600360006004838154811061064b5761064b6111c1565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16835282019290925260409081019091208151608081019092528054829082906106979061116e565b80601f01602080910402602001604051908101604052809291908181526020018280546106c39061116e565b80156107105780601f106106e557610100808354040283529160200191610710565b820191906000526020600020905b8154815290600101906020018083116106f357829003601f168201915b505050505081526020016001820180546107299061116e565b80601f01602080910402602001604051908101604052809291908181526020018280546107559061116e565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff8116602083015274010000000000000000000000000000000000000000900467ffffffffffffffff166040909101528251839083908110610809576108096111c1565b60209081029190910101526001016105a2565b509094909350915050565b61082f610bab565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040516000916108c99173ffffffffffffffffffffffffffffffffffffffff909116906108ae903090899089906020016111f0565b60405160208183030381529060405280519060200120610c73565b6040517fb0a6217b00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff84811660248301529192509082169063b0a6217b90604401600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b505060408051608081018252888152602080820189905273ffffffffffffffffffffffffffffffffffffffff8089168385015267ffffffffffffffff42166060840152861660009081526003909152919091208151919350915081906109b6908261128c565b50602082015160018201906109cb908261128c565b506040828101516002909201805460609094015167ffffffffffffffff1674010000000000000000000000000000000000000000027fffffffff0000000000000000000000000000000000000000000000000000000090941673ffffffffffffffffffffffffffffffffffffffff9384161793909317909255600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180549184167fffffffffffffffffffffffff0000000000000000000000000000000000000000929092168217905590517f11ce410af1ffebf4aa1154680991c314191d955514bfa6af723d75874baee4ae90610ad7908890889088906113a6565b60405180910390a25050505050565b600154604051600091610b399173ffffffffffffffffffffffffffffffffffffffff90911690610b1e903090879087906020016111f0565b60405160208183030381529060405280519060200120610d07565b90505b92915050565b610b4a610bab565b73ffffffffffffffffffffffffffffffffffffffff8116610b9f576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b610ba881610bfe565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104db576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610b96565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f5905073ffffffffffffffffffffffffffffffffffffffff8116610b3c576040517fc2f868f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c82012060788201526055604390910120600090610b39565b600060208284031215610d7957600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610da457600080fd5b919050565b600060208284031215610dbb57600080fd5b610b3982610d80565b6000815180845260005b81811015610dea57602081850181015186830182015201610dce565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b608081526000610e3b6080830187610dc4565b8281036020840152610e4d8187610dc4565b91505073ffffffffffffffffffffffffffffffffffffffff8416604083015267ffffffffffffffff8316606083015295945050505050565b6040808252835182820181905260009190606090818501906020808901865b83811015610ed657815173ffffffffffffffffffffffffffffffffffffffff1685529382019390820190600101610ea4565b50508683038188015287518084528184019250600581901b8401820189830160005b83811015610f9a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878403018652815160808151818652610f3c82870182610dc4565b9150508682015185820388870152610f548282610dc4565b838d015173ffffffffffffffffffffffffffffffffffffffff16878e0152928b015167ffffffffffffffff16958b01959095525095850195925090840190600101610ef8565b50909b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610feb57600080fd5b813567ffffffffffffffff8082111561100657611006610fab565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561104c5761104c610fab565b8160405283815286602085880101111561106557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561109b57600080fd5b843567ffffffffffffffff808211156110b357600080fd5b6110bf88838901610fda565b955060208701359150808211156110d557600080fd5b506110e287828801610fda565b9350506110f160408601610d80565b91506110ff60608601610d80565b905092959194509250565b6000806040838503121561111d57600080fd5b823567ffffffffffffffff8082111561113557600080fd5b61114186838701610fda565b9350602085013591508082111561115757600080fd5b5061116485828601610fda565b9150509250929050565b600181811c9082168061118257607f821691505b6020821081036111bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061121f6060830185610dc4565b82810360408401526112318185610dc4565b9695505050505050565b601f821115611287576000816000526020600020601f850160051c810160208610156112645750805b601f850160051c820191505b8181101561128357828155600101611270565b5050505b505050565b815167ffffffffffffffff8111156112a6576112a6610fab565b6112ba816112b4845461116e565b8461123b565b602080601f83116001811461130d57600084156112d75750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611283565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561135a5788860151825594840194600190910190840161133b565b508582101561139657878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260006113b96060830186610dc4565b82810360208401526113cb8186610dc4565b91505073ffffffffffffffffffffffffffffffffffffffff8316604083015294935050505056fea164736f6c6343000817000a";

type ZKAFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKAFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKAFactory__factory extends ContractFactory {
  constructor(...args: ZKAFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZKAFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZKAFactory__factory {
    return super.connect(runner) as ZKAFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKAFactoryInterface {
    return new Interface(_abi) as ZKAFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZKAFactory {
    return new Contract(address, _abi, runner) as unknown as ZKAFactory;
  }
}
